// <auto-generated />
using System;
using MeichuHackaThon2024Model.ContextModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeichuHackaThon2024Model.Migrations
{
    [DbContext(typeof(MeichuHackaThonDBContext))]
    [Migration("20241008155524_init_Table")]
    partial class init_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Crowding", b =>
                {
                    b.Property<int>("Sysno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sysno"));

                    b.Property<string>("CrowdingName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Sysno");

                    b.ToTable("Crowdings");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Filter", b =>
                {
                    b.Property<int>("Sysno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sysno"));

                    b.Property<string>("FilterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Sysno");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Path", b =>
                {
                    b.Property<int>("Sysno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sysno"));

                    b.Property<float>("CostTime")
                        .HasColumnType("real");

                    b.Property<int>("CrowdingSysno")
                        .HasColumnType("int");

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<int>("FilterSysno")
                        .HasColumnType("int");

                    b.Property<int>("TransportCompSysno")
                        .HasColumnType("int");

                    b.HasKey("Sysno");

                    b.HasIndex("CrowdingSysno");

                    b.HasIndex("FilterSysno");

                    b.HasIndex("TransportCompSysno");

                    b.ToTable("Paths");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.TransportComp", b =>
                {
                    b.Property<int>("Sysno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sysno"));

                    b.Property<string>("TransportCompName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Sysno");

                    b.ToTable("TransportComps");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.User", b =>
                {
                    b.Property<int>("Sysno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sysno"));

                    b.Property<string>("Ac_Number")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CrTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pw_Number")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("TxTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Sysno");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Path", b =>
                {
                    b.HasOne("MeichuHackaThon2024Model.Models.Crowding", "Crowding")
                        .WithMany()
                        .HasForeignKey("CrowdingSysno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.Filter", "Filter")
                        .WithMany()
                        .HasForeignKey("FilterSysno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.TransportComp", "TransportComp")
                        .WithMany()
                        .HasForeignKey("TransportCompSysno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crowding");

                    b.Navigation("Filter");

                    b.Navigation("TransportComp");
                });
#pragma warning restore 612, 618
        }
    }
}
