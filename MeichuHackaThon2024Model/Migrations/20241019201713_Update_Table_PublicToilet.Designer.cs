// <auto-generated />
using MeichuHackaThon2024Model.ContextModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeichuHackaThon2024Model.Migrations
{
    [DbContext(typeof(MeichuHackaThonDBContext))]
    [Migration("20241019201713_Update_Table_PublicToilet")]
    partial class Update_Table_PublicToilet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.BusInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteEnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopEnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopSequence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusInformations");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Path", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CostTime")
                        .HasColumnType("float");

                    b.Property<int>("Crowding")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndPointId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PathDetailId")
                        .HasColumnType("int");

                    b.Property<int>("PathId")
                        .HasColumnType("int");

                    b.Property<int>("StartPointId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndPointId");

                    b.HasIndex("StartPointId");

                    b.HasIndex("TransportationId");

                    b.ToTable("Paths");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.PathDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CostTime")
                        .HasColumnType("float");

                    b.Property<int>("Crowding")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndPointId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PathDetailId")
                        .HasColumnType("int");

                    b.Property<int>("PathId")
                        .HasColumnType("int");

                    b.Property<int>("PathIds")
                        .HasColumnType("int");

                    b.Property<int>("StartPointId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndPointId");

                    b.HasIndex("PathId");

                    b.HasIndex("StartPointId");

                    b.HasIndex("TransportationId");

                    b.ToTable("PathDetails");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.PointInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PointInfos");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.PublicToilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("兒童座椅數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("兒童馬桶數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("公廁名稱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("女廁馬桶坐式數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("女廁馬桶蹲式數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("殘障廁所數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("男廁小便斗數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("男廁馬桶坐式數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("男廁馬桶蹲式數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("編號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("縣市別代碼")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("育嬰台數量")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("行政區代碼")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("郵遞區號")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PublicToilets");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Transportation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transportations");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.WaterStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("位置")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("分機號碼")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("名稱")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("地址")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("廠牌機型")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("樓層")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("水溫")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("管理單位聯絡人")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("縣市別")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("連絡電話")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("開放時間")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("飲水台數")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaterStations");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Path", b =>
                {
                    b.HasOne("MeichuHackaThon2024Model.Models.PointInfo", "EndPoint")
                        .WithMany()
                        .HasForeignKey("EndPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.PointInfo", "StartPoint")
                        .WithMany()
                        .HasForeignKey("StartPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.Transportation", "Transportation")
                        .WithMany()
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EndPoint");

                    b.Navigation("StartPoint");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.PathDetail", b =>
                {
                    b.HasOne("MeichuHackaThon2024Model.Models.PointInfo", "EndPoint")
                        .WithMany()
                        .HasForeignKey("EndPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.Path", "Path")
                        .WithMany("PathDetails")
                        .HasForeignKey("PathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.PointInfo", "StartPoint")
                        .WithMany()
                        .HasForeignKey("StartPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MeichuHackaThon2024Model.Models.Transportation", "Transportation")
                        .WithMany()
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EndPoint");

                    b.Navigation("Path");

                    b.Navigation("StartPoint");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("MeichuHackaThon2024Model.Models.Path", b =>
                {
                    b.Navigation("PathDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
